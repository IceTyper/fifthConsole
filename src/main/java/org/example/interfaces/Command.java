package org.example.interfaces;

import org.example.important.Core;

import java.util.Scanner;

/**
 * Интерфейс для реализации команд приложения.
 * Определяет базовый контракт для всех команд, включая описание и логику выполнения.
 * Каждая реализующая команда должна предоставить:
 * - текстовое описание для справки
 * - метод выполнения с обработкой аргументов
 *
 * @author IceTyper
 */
public interface Command {

    /**
     * Возвращает текстовое описание назначения и синтаксиса команды.
     * Используется для вывода справочной информации пользователю (через команду Help).
     *
     * @return Строка с описанием команды в формате:
     * "имя_команды {параметры} - описание функционала"
     * @see org.example.commands.Help
     */
    String getDescription();

    /**
     * Выполнение самой команды.
     *
     * @param core    экземпляр класса Core, используемый для доступа к менеджеру ввода-вывода и другим командам
     * @param scanner Объект для чтения пользовательского ввода (может быть перенаправлен
     *                при выполнении скрипта)
     * @param args    Аргументы команды, где:
     *                args[0] - имя команды
     *                args[1...n] - остальные переданные пользователем значения
     */
    void execute(Core core, Scanner scanner, String[] args);
}